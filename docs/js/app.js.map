{"version":3,"names":[],"mappings":"","sources":["src/app/app.js"],"sourcesContent":["/* jshint esversion: 6 */\n/* global Swiper, TweenLite, TweenMax */\n\nconst module = 100;\n\nexport class Triangle {\n\n\tconstructor(white) {\n\t\tconst element = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\t\tconst use = document.createElementNS('http://www.w3.org/2000/svg', 'use');\n\t\tconst size = Math.random() < 0.5 ? 60 : 120;\n\t\tconst filled = Math.random() < 0.15 ? '-fill' : '';\n\t\tconst color = white ? '-white' : '';\n\t\tconst name = 'triangle-' + size + filled + color;\n\t\telement.appendChild(use);\n\t\telement.setAttribute('class', 'triangle triangle--' + size);\n\t\tuse.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', '#' + name);\n\t\tuse.setAttribute('width', size);\n\t\tuse.setAttribute('height', size);\n\t\tthis.element = element;\n\t}\n\n\tgetRandomPosition(element) {\n\t\tconst width = element.offsetWidth;\n\t\tconst height = element.offsetHeight;\n\t\tconst r = Math.floor(Math.random() * 4) * 90;\n\t\tconst x = Math.floor((Math.random() * width) / module);\n\t\tconst y = Math.floor((Math.random() * height) / module);\n\t\tconst i = y * 30 + x;\n\t\treturn {\n\t\t\tr: r,\n\t\t\tx: x * module,\n\t\t\ty: y * module,\n\t\t\ti: i,\n\t\t};\n\t}\n\n\tappendInto(element, pool) {\n\t\telement.appendChild(this.element);\n\t\tthis.parent = element;\n\t\tthis.resize(element, pool);\n\t}\n\n\tresize(element, pool) {\n\t\tlet position = this.getRandomPosition(element);\n\t\tlet t = 0;\n\t\twhile (pool[position.i] !== undefined && t < 5) {\n\t\t\tposition = this.getRandomPosition(element);\n\t\t\tt++;\n\t\t}\n\t\tpool[position.i] = position.i;\n\t\tthis.position = position;\n\t\tthis.parent = element;\n\t\tTweenMax.set(this.element, {\n\t\t\topacity: 0,\n\t\t\ttransform: 'translateX(' + position.x + '%) translateY(' + position.y + '%) rotateZ(' + position.r + 'deg)',\n\t\t});\n\t\tthis.appear();\n\t}\n\n\tappear() {\n\t\tconst position = this.position;\n\t\tTweenMax.to(this.element, 1.0, {\n\t\t\topacity: 1,\n\t\t\tonComplete: () => {\n\t\t\t\tthis.rotate();\n\t\t\t},\n\t\t\tonCompleteScope: this,\n\t\t\tease: Quint.easeInOut,\n\t\t\toverwrite: 'all',\n\t\t\tdelay: position.i * 0.02,\n\t\t});\n\t}\n\n\trotate() {\n\t\tconst position = this.position;\n\t\tconst i = (position.x / module) - 1;\n\t\tposition.x = i * module;\n\t\tTweenMax.to(this.element, 1.0, {\n\t\t\t// transform: 'translateX(' + position.x + '%) translateY(' + position.y + '%)',\n\t\t\tx: position.x + '%',\n\t\t\tdirectionalRotation: '90_cw',\n\t\t\tonComplete: () => {\n\t\t\t\tthis.disappear();\n\t\t\t},\n\t\t\tonCompleteScope: this,\n\t\t\tease: Quint.easeInOut,\n\t\t\toverwrite: 'all',\n\t\t\tdelay: 3 + Math.floor(Math.random() * 10),\n\t\t});\n\t}\n\n\tdisappear() {\n\t\tTweenMax.to(this.element, 1.0, {\n\t\t\topacity: 0,\n\t\t\tonComplete: () => {\n\t\t\t\tconst position = this.getRandomPosition(this.parent);\n\t\t\t\tthis.position = position;\n\t\t\t\tTweenMax.set(this.element, {\n\t\t\t\t\topacity: 0,\n\t\t\t\t\ttransform: 'translateX(' + position.x + '%) translateY(' + position.y + '%) rotateZ(' + position.r + 'deg)',\n\t\t\t\t});\n\t\t\t\tthis.appear();\n\t\t\t},\n\t\t\tonCompleteScope: this,\n\t\t\tease: Quint.easeInOut,\n\t\t\toverwrite: 'all',\n\t\t});\n\t}\n\n\ttween() {\n\t\tTweenMax.to(this.element, 1.0, {\n\t\t\topacity: Math.min(1, Math.random() * 2),\n\t\t\tonComplete: () => {\n\t\t\t\tthis.tween();\n\t\t\t},\n\t\t\tonCompleteScope: this,\n\t\t\tease: Quint.easeInOut,\n\t\t\toverwrite: 'all',\n\t\t\tdelay: position.i * 0.1,\n\t\t});\n\t}\n\n\trender() {\n\t\tconsole.log(this);\n\t}\n\n}\n\nexport class Triangles {\n\n\tconstructor(element) {\n\t\tconst triangles = new Array(20).fill(null).map(() => {\n\t\t\treturn new Triangle(element.hasAttribute('white'));\n\t\t});\n\t\tthis.element = element;\n\t\tthis.triangles = triangles;\n\t\tconst pool = {};\n\t\ttriangles.forEach((triangle) => {\n\t\t\ttriangle.appendInto(element, pool);\n\t\t});\n\t}\n\n\tresize() {\n\t\tconst element = this.element;\n\t\tconst pool = {};\n\t\tthis.triangles.forEach((triangle) => {\n\t\t\ttriangle.resize(element, pool);\n\t\t});\n\t}\n\n}\n\nexport class App {\n\n\tconstructor() {}\n\n\tinit() {\n\t\tconst page = document.querySelector('.page');\n\t\tconst swiperHero = new Swiper('.swiper-container--home-hero', {\n\t\t\tloop: true,\n\t\t\teffect: 'fade',\n\t\t\tparallax: true,\n\t\t\tspaceBetween: 300,\n\t\t\tspeed: 600,\n\t\t\tautoplay: {\n\t\t\t\tdelay: 5000,\n\t\t\t\tdisableOnInteraction: true,\n\t\t\t},\n\t\t\ton: {\n\t\t\t\tslideChangeTransitionEnd: function() {\n\t\t\t\t\t// console.log('slideChange', this.slides.length, this.activeIndex);\n\t\t\t\t\tconst slide = this.slides[this.activeIndex];\n\t\t\t\t\tif (slide) {\n\t\t\t\t\t\tconst video = slide.querySelector('video');\n\t\t\t\t\t\t/*\n\t\t\t\t\t\tconst videos = [].slice.call(slide.parentNode.querySelectorAll('video'));\n\t\t\t\t\t\tvideos.forEach(function(v) {\n\t\t\t\t\t\t\tif (!video && !!(v.currentTime > 0 && !v.paused && !v.ended && v.readyState > 2)) {\n\t\t\t\t\t\t\t\tv.pause();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tif (video) {\n\t\t\t\t\t\t\tvideo.play();\n\t\t\t\t\t\t\tconsole.log(video);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// console.log(videos);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\t/*\n\t\t\tpagination: {\n\t\t\t\tel: '.swiper-pagination',\n\t\t\t\tclickable: true,\n\t\t\t\tdynamicBullets: true,\n\t\t\t},\n\t\t\t*/\n\t\t});\n\t\tconst swiperHilights = new Swiper('.swiper-container--hilights', {\n\t\t\tloop: false,\n\t\t\t/*\n\t\t\tmousewheel: {\n\t\t\t\tinvert: true,\n\t\t\t},\n\t\t\t*/\n\t\t\tparallax: true,\n\t\t\tspaceBetween: 300,\n\t\t\tspeed: 600,\n\t\t\tpagination: {\n\t\t\t\tel: '.swiper-pagination',\n\t\t\t\tclickable: true,\n\t\t\t\tdynamicBullets: true,\n\t\t\t},\n\t\t});\n\t\tconst shadows = [].slice.call(document.querySelectorAll('[data-parallax-shadow]'));\n\t\tconst animations = [].slice.call(document.querySelectorAll('.triangles')).map((element) => {\n\t\t\treturn new Triangles(element);\n\t\t});\n\t\tconst hrefs = [].slice.call(document.querySelectorAll('[href=\"#\"]'));\n\t\tconst mxy = { x: 0, y: 0 };\n\t\tthis.page = page;\n\t\tthis.swiperHero = swiperHero;\n\t\tthis.swiperHilights = swiperHilights;\n\t\tthis.shadows = shadows;\n\t\tthis.animations = animations;\n\t\tthis.hrefs = hrefs;\n\t\tthis.mxy = mxy;\n\t\twindow.addEventListener('resize', () => {\n\t\t\tthis.resize();\n\t\t});\n\t\twindow.addEventListener('scroll', () => {\n\t\t\tthis.scroll();\n\t\t});\n\t\tdocument.addEventListener('mousemove', (e) => {\n\t\t\tthis.mxy.x = e.clientX / window.innerWidth - 0.5;\n\t\t\tthis.mxy.y = e.clientY / window.innerHeight - 0.5;\n\t\t});\n\t\threfs.forEach((element) => {\n\t\t\telement.addEventListener('click', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\t\t});\n\t\tthis.loop();\n\t}\n\n\trender() {\n\t\tthis.shadows.forEach((element) => {\n\t\t\tconst xy = element.xy || { x: 0, y: 0 };\n\t\t\txy.x += (this.mxy.x - xy.x) / 8;\n\t\t\txy.y += (this.mxy.y - xy.y) / 8;\n\t\t\tconst shadow = element.getAttribute('data-parallax-shadow') || 90;\n\t\t\tconst pow = (0.2 + 0.3 * (Math.abs(xy.x) + Math.abs(xy.y)) / 2).toFixed(3);\n\t\t\tconst x = (xy.x * -100).toFixed(2);\n\t\t\tconst y = (xy.y * -50).toFixed(2);\n\t\t\tconst bs = x + 'px ' + y + 'px ' + shadow + 'px -10px rgba(0, 0, 0, ' + pow + ')';\n\t\t\tif (element.bs !== bs) {\n\t\t\t\tTweenMax.set(element, {\n\t\t\t\t\t// transform: 'translateX(' + (xy.x * -4) + '%) translateY(' + (xy.y * -2) + '%)',\n\t\t\t\t\tboxShadow: bs,\n\t\t\t\t});\n\t\t\t\telement.bs = bs;\n\t\t\t}\n\t\t\telement.xy = xy;\n\t\t});\n\t}\n\n\tloop() {\n\t\tthis.render();\n\t\twindow.requestAnimationFrame(() => {\n\t\t\tthis.loop();\n\t\t});\n\t}\n\n\tscroll() {\n\t\tif (window.scrollY > 0) {\n\t\t\tthis.page.setAttribute('class', 'page fixed');\n\t\t} else {\n\t\t\tthis.page.setAttribute('class', 'page');\n\t\t}\n\t}\n\n\tresize() {\n\t\tthis.animations.forEach((animation) => {\n\t\t\tanimation.resize();\n\t\t});\n\t}\n\n}\n\n(function() {\n\t\"use strict\";\n\n\tvar app = new App();\n\n\twindow.onload = () => {\n\t\tapp.init();\n\t};\n\n}());\n"],"file":"app.js"}