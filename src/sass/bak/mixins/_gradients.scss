@import "bootstrap/scss/functions";
@import "bootstrap/scss/mixins";
@import "variables";

/// Test if `$value` is a valid direction
/// @param {*} $value - Value to test
/// @return {Bool}
@function is-direction($value) {
	$is-keyword: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
	$is-angle: type-of($value)=='number'and index('deg''grad''turn''rad', unit($value));

	@return $is-keyword or $is-angle;
}

@mixin linear-gradient($direction, $color-stops...) {

	// Direction has been omitted and happens to be a color-stop
	@if is-direction($direction)==false {
		$color-stops: $direction, $color-stops;
		$direction: 180deg;
	}

	background: nth(nth($color-stops, 1), 1);
	background: -moz-linear-gradient(legacy-direction($direction), $color-stops);
	background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
	background: -o-linear-gradient(legacy-direction($direction), $color-stops);
	background: -ms-linear-gradient($direction, $color-stops);
	background: linear-gradient($direction, $color-stops);
	// filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 );
}
